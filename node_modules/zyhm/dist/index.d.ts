export interface AccountData {
    email: string;
    user: string;
    ip: string;
    plan: string;
    domain: string;
    diskused: string;
    is_locked: number;
    maxaddons: string;
    maxsub: string;
    disklimit: string;
    maxparked: string;
    theme: string;
    outgoing_mail_hold: number;
    outgoing_mail_suspended: number;
    partition: string;
    owner: string;
    maxsql: string;
    max_email_per_hour: string;
    min_defer_fail_to_trigger_protection: string;
    suspendedtime: number;
    legacy_backup: number;
    maxpop: string;
    unix_startdate: number;
    suspendreason: string;
    startdate: string;
    backup: number;
    suspended: number;
    max_defere_fail_percentage: string;
    ipv6: any[];
    maxlst: string;
    shell: string;
    maxftp: string;
}
export interface CreateAccountOptions {
    username: string;
    domain: string;
    password: string;
    plan: string;
}
export declare class Client {
    private api;
    constructor(options: WHMOptions);
    /**
     * Lists the accounts that you have now
     * @returns {Promise<any>}
     */
    listAccounts(): Promise<AccountData[]>;
    /**
     * List IP addresses available
     * @returns {Promise<any>}
     */
    listIPAddresses(): Promise<any>;
    /**
     * Create an account
     * @returns {Promise<any>}
     */
    createAccount(options: CreateAccountOptions): Promise<any>;
    terminateAccount(user: string): Promise<any>;
}
export interface WHMOptions {
    apiType?: string;
    version?: number;
    serverUrl: string;
    username: string;
    remoteAccessKey: string;
}
